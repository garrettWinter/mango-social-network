const User = require('../models/users');

module.exports = {

// Get all Users
getUsers(req,res) {
    User.find()
        .then((users) => res.json(users))
        .catch((err) => res.status(500).json(err));
},

// Get Single User
getSingleUser(req, res) {
    User.findOne({ _id: req.params.userId })
    .then((user) =>
    !user
      ? res.status(404).json({ message: 'No user with that ID' })
      : res.json(user)
  )
  .catch((err) => res.status(500).json(err));
},

// Create a User
createUser(req, res) {
    User.create(req.body)
      .then((newUserData) => res.json(newUserData))
      .catch((err) => res.status(500).json(err));
  },

// Update a User
updateUser(req, res) {
    User.findOneAndUpdate(
      { _id: req.params.userId },
      { $set: req.body },
      { runValidators: true, new: true }
    )
      .then((user) =>
        !user
          ? res.status(404).json({ message: 'No user with this id!' })
          : res.json(user)
      )
      .catch((err) => {
        res.status(500).json(err);
      });
  },
// Delete a User
deleteUser(req, res) {
    User.findOneAndRemove({ _id: req.params.userId })
    .then((user) =>
    !user
      ? res
          .status(404)
          .json({ message: 'No User found with this id!' })
      : res.json({ message: 'User successfully deleted!' })
  )
  .catch((err) => res.status(500).json(err));

  },

  // Add friend
  addFriend(req, res) {
    User.findOneAndUpdate(
      { _id: req.params.userId },
      { $addToSet: { friends: req.params.friendId } },
      { runValidators: true, new: true }
    )
      .then((user) =>
        !user
          ? res.status(404).json({ message: 'No user found with this id!' })
          : res.json(user)
      )
      .catch((err) => res.status(500).json(err));
  },

  // Delete a friend
  deleteFriend(req, res) {
    User.findOne({ _id: req.params.friendId })
      .then((user) =>
        !user
          ? res.status(404).json({ message: 'No friend found with this id!' })
          : User.findOneAndUpdate(
              { _id: req.params.userId },
              { $pull: { friends: req.params.friendId } },
              { new: true }
            )
      )
      .then((user) =>
        !user
          ? res
              .status(404)
              .json({ message: 'No user found with this id!' })
          : res.json({ message: 'friend successfully removed!' })
      )
  },
  
};